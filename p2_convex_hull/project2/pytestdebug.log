versions pytest-7.4.4, python-3.12.7.final.0
cwd=C:\Users\jnrpo\SurfaceStudio\project\project2
args=('test_convex_hull.py', '--debug')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x000001A138CD2F30>
    pytest_plugin_registered [hook]
        plugin: <Session project2 exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x000001A138CD2F30>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A139548230>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A13951F080>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001A138CD2F30>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'byu_pytest_utils.pytest_plugin' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\byu_pytest_utils\\pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A13941B650>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A139355670>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A139548230>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A13951F080>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001A13951FAA0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001A139383080>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x000001A138CD2F30>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\mark\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\main.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\runner.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\helpconfig.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\python.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\terminal.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\debugging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\unittest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\capture.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\skipping.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\legacypath.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\tmpdir.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\monkeypatch.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\recwarn.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\pastebin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.nose' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\nose.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\assertion\\__init__.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\junitxml.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\doctest.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\cacheprovider.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\freeze_support.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\setupplan.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\stepwise.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\warnings.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\logging.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\reports.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\python_path.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\unraisableexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\threadexception.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\faulthandler.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'byu_pytest_utils.pytest_plugin' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\byu_pytest_utils\\pytest_plugin.py'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=9 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A13941B650>' mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=11 _state='suspended' tmpfile=<_io.TextIOWrapper name='<tempfile._TemporaryFileWrapper object at 0x000001A139355670>' mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=7 _state='started' tmpfile=<_io.TextIOWrapper name='nul' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x000001A139548230>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x000001A13951F080>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x000001A13951FAA0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x000001A139383080>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x000001A13951E9C0>
          manager: <_pytest.config.PytestPluginManager object at 0x000001A1390EEF30>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x000001A138CD2F30>
          start_path: C:\Users\jnrpo\SurfaceStudio\project\project2
          startdir: C:\Users\jnrpo\SurfaceStudio\project\project2
      early skip of rewriting module: email.parser [assertion]
      early skip of rewriting module: email.feedparser [assertion]
      finish pytest_report_header --> [['rootdir: C:\\Users\\jnrpo\\SurfaceStudio\\project\\project2', 'plugins: byu-pytest-utils-0.7.13'], ['using: pytest-7.4.4', 'setuptools registered plugins:', '  byu-pytest-utils-0.7.13 at c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\byu_pytest_utils\\pytest_plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['test_convex_hull.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument (WindowsPath('C:/Users/jnrpo/SurfaceStudio/project/project2/test_convex_hull.py'), []) [collection]
            pytest_collect_file [hook]
                parent: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                file_path: C:\Users\jnrpo\SurfaceStudio\project\project2\test_convex_hull.py
                path: C:\Users\jnrpo\SurfaceStudio\project\project2\test_convex_hull.py
              pytest_pycollect_makemodule [hook]
                  parent: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
                  module_path: C:\Users\jnrpo\SurfaceStudio\project\project2\test_convex_hull.py
                  path: C:\Users\jnrpo\SurfaceStudio\project\project2\test_convex_hull.py
              finish pytest_pycollect_makemodule --> <Module test_convex_hull.py> [hook]
            finish pytest_collect_file --> [<Module test_convex_hull.py>] [hook]
          matchnodes [<Module test_convex_hull.py>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module test_convex_hull.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_convex_hull.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_convex_hull.py>
      find_module called for: test_convex_hull [assertion]
      matched test file (was specified on cmdline): 'C:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\test_convex_hull.py' [assertion]
      found cached rewritten pyc for C:\Users\jnrpo\SurfaceStudio\project\project2\test_convex_hull.py [assertion]
      find_module called for: test_utils [assertion]
      matched test file 'C:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\test_utils.py' [assertion]
      found cached rewritten pyc for C:\Users\jnrpo\SurfaceStudio\project\project2\test_utils.py [assertion]
      early skip of rewriting module: convex_hull [assertion]
      early skip of rewriting module: generate [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from 'c:\\Users\\jnrpo\\SurfaceStudio\\project\\project2\\.venv\\Lib\\site-packages\\_pytest\\assertion\\rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: max_score
            obj: <function max_score at 0x000001A13936D940>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: is_convex_hull
            obj: <function is_convex_hull at 0x000001A139576D40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: compute_hull
            obj: <function compute_hull at 0x000001A139576DE0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: generate_random_points
            obj: <function generate_random_points at 0x000001A139577740>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: test_uniform_distribution_small
            obj: <function test_uniform_distribution_small at 0x000001A139576700>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001A13951F170>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_uniform_distribution_small>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: test_uniform_distribution_large
            obj: <function test_uniform_distribution_large at 0x000001A1395777E0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001A139506420>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_uniform_distribution_large>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: test_guassian_distribution_small
            obj: <function test_guassian_distribution_small at 0x000001A139577880>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001A139504CB0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_guassian_distribution_small>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_convex_hull.py>
            name: test_guassian_distribution_large
            obj: <function test_guassian_distribution_large at 0x000001A139577920>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x000001A13935A2D0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_guassian_distribution_large>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test_convex_hull.py' lenresult=4 outcome='passed'> [hook]
    genitems <Function test_uniform_distribution_small> [collection]
      pytest_itemcollected [hook]
          item: <Function test_uniform_distribution_small>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_uniform_distribution_large> [collection]
      pytest_itemcollected [hook]
          item: <Function test_uniform_distribution_large>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_guassian_distribution_small> [collection]
      pytest_itemcollected [hook]
          item: <Function test_guassian_distribution_small>
      finish pytest_itemcollected --> [] [hook]
    genitems <Function test_guassian_distribution_large> [collection]
      pytest_itemcollected [hook]
          item: <Function test_guassian_distribution_large>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'test_convex_hull.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x000001A138CD2F30>
          items: [<Function test_uniform_distribution_small>, <Function test_uniform_distribution_large>, <Function test_guassian_distribution_small>, <Function test_guassian_distribution_large>]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x000001A138CD2F30>
            items: [<Function test_uniform_distribution_small>, <Function test_uniform_distribution_large>, <Function test_guassian_distribution_small>, <Function test_guassian_distribution_large>]
            start_path: C:\Users\jnrpo\SurfaceStudio\project\project2
            startdir: C:\Users\jnrpo\SurfaceStudio\project\project2
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session project2 exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=4>
      pytest_runtest_protocol [hook]
          item: <Function test_uniform_distribution_small>
          nextitem: <Function test_uniform_distribution_large>
        pytest_runtest_logstart [hook]
            nodeid: test_convex_hull.py::test_uniform_distribution_small
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 8, 'test_uniform_distribution_small')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_uniform_distribution_small>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_small>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_uniform_distribution_small>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_uniform_distribution_small>
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_small>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.4944403909474524, 0.5984547484286775), (-0.6736113...9, -0.1178814154723431), (0.9342773303061289, 0.3788359442023279), (-0.33488336292954113, -0.6924621461985065), ...])') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_uniform_distribution_small>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.4944403909474524, 0.5984547484286775), (-0.6736113...9, -0.1178814154723431), (0.9342773303061289, 0.3788359442023279), (-0.33488336292954113, -0.6924621461985065), ...])') tblen=25>>
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_uniform_distribution_small>
            nextitem: <Function test_uniform_distribution_large>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_small>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_convex_hull.py::test_uniform_distribution_small
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 8, 'test_uniform_distribution_small')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_uniform_distribution_large>
          nextitem: <Function test_guassian_distribution_small>
        pytest_runtest_logstart [hook]
            nodeid: test_convex_hull.py::test_uniform_distribution_large
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 15, 'test_uniform_distribution_large')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_uniform_distribution_large>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_large>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_uniform_distribution_large>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_uniform_distribution_large>
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_large>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.7382913605577, 0.9998886255012429), (-0.8516639470...9, -0.1178814154723431), (0.9342773303061289, 0.3788359442023279), (-0.33488336292954113, -0.6924621461985065), ...])') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_uniform_distribution_large>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.7382913605577, 0.9998886255012429), (-0.8516639470...9, -0.1178814154723431), (0.9342773303061289, 0.3788359442023279), (-0.33488336292954113, -0.6924621461985065), ...])') tblen=25>>
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_uniform_distribution_large>
            nextitem: <Function test_guassian_distribution_small>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_uniform_distribution_large>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_convex_hull.py::test_uniform_distribution_large
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 15, 'test_uniform_distribution_large')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_guassian_distribution_small>
          nextitem: <Function test_guassian_distribution_large>
        pytest_runtest_logstart [hook]
            nodeid: test_convex_hull.py::test_guassian_distribution_small
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 22, 'test_guassian_distribution_small')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_guassian_distribution_small>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_small>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_guassian_distribution_small>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_guassian_distribution_small>
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_small>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.5915973864468387, 0.41574797385338186), (-0.822659..., -0.2049886009086538), (-0.35972462576080066, -0.04695494869877755), (0.7215359777266964, -0.639798688747646), ...])') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_guassian_distribution_small>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-0.5915973864468387, 0.41574797385338186), (-0.822659..., -0.2049886009086538), (-0.35972462576080066, -0.04695494869877755), (0.7215359777266964, -0.639798688747646), ...])') tblen=25>>
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_guassian_distribution_small>
            nextitem: <Function test_guassian_distribution_large>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_small>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_convex_hull.py::test_guassian_distribution_small
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 22, 'test_guassian_distribution_small')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <Function test_guassian_distribution_large>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: test_convex_hull.py::test_guassian_distribution_large
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 29, 'test_guassian_distribution_large')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Function test_guassian_distribution_large>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_large>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Function test_guassian_distribution_large>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Function test_guassian_distribution_large>
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_large>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-1.1026536002346294, 1.1464889651257273), (-1.4778082..., -0.2049886009086538), (-0.35972462576080066, -0.04695494869877755), (0.7215359777266964, -0.639798688747646), ...])') tblen=25>>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='call' outcome='failed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            node: <Function test_guassian_distribution_large>
            call: <CallInfo when='call' excinfo=<ExceptionInfo AssertionError('assert False\n +  where False = is_convex_hull([(-1.1026536002346294, 1.1464889651257273), (-1.4778082..., -0.2049886009086538), (-0.35972462576080066, -0.04695494869877755), (0.7215359777266964, -0.639798688747646), ...])') tblen=25>>
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='call' outcome='failed'>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Function test_guassian_distribution_large>
            nextitem: None
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <Function test_guassian_distribution_large>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x000001A138CD2F30>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: test_convex_hull.py::test_guassian_distribution_large
            location: ('..\\..\\..\\OneDrive - Brigham Young University\\surfaceStudio\\class\\Fall 2024\\CS 312\\project\\project2\\test_convex_hull.py', 29, 'test_guassian_distribution_large')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session project2 exitstatus=<ExitCode.TESTS_FAILED: 1> testsfailed=4 testscollected=4>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x000001A13951FAA0>
          exitstatus: 1
          config: <_pytest.config.Config object at 0x000001A138CD2F30>
      early skip of rewriting module: pygments [assertion]
      early skip of rewriting module: pygments.formatters [assertion]
      early skip of rewriting module: pygments.formatters._mapping [assertion]
      early skip of rewriting module: pygments.plugin [assertion]
      early skip of rewriting module: pygments.util [assertion]
      early skip of rewriting module: pygments.formatters.terminal [assertion]
      early skip of rewriting module: pygments.formatter [assertion]
      early skip of rewriting module: pygments.styles [assertion]
      early skip of rewriting module: pygments.styles._mapping [assertion]
      early skip of rewriting module: pygments.token [assertion]
      early skip of rewriting module: pygments.console [assertion]
      early skip of rewriting module: pygments.lexers [assertion]
      early skip of rewriting module: pygments.lexers._mapping [assertion]
      early skip of rewriting module: pygments.modeline [assertion]
      early skip of rewriting module: pygments.lexers.python [assertion]
      early skip of rewriting module: pygments.lexer [assertion]
      early skip of rewriting module: pygments.filter [assertion]
      early skip of rewriting module: pygments.filters [assertion]
      early skip of rewriting module: pygments.regexopt [assertion]
      early skip of rewriting module: pygments.unistring [assertion]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_small' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001A138CD2F30>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_convex_hull.py::test_uniform_distribution_large' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001A138CD2F30>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_small' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001A138CD2F30>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        pytest_report_teststatus [hook]
            report: <TestReport 'test_convex_hull.py::test_guassian_distribution_large' when='call' outcome='failed'>
            config: <_pytest.config.Config object at 0x000001A138CD2F30>
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x000001A138CD2F30>
    finish pytest_unconfigure --> [] [hook]
